<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Blogging on To The Triforce</title>
    <link>http://wmanger.com/categories/blogging/index.xml</link>
    <description>Recent content in Blogging on To The Triforce</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <atom:link href="http://wmanger.com/categories/blogging/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Goodbye 2016!</title>
      <link>http://wmanger.com/post/2017-01-08/</link>
      <pubDate>Sun, 08 Jan 2017 15:17:40 -0700</pubDate>
      
      <guid>http://wmanger.com/post/2017-01-08/</guid>
      <description>

&lt;p&gt;In 2016, I took a drastically different direction in life in the way of goal setting. I started to look at things as goals and actually wrote them down. This felt great at the beginning of
the year, but as time passed and life and work seeped into the time I had
&lt;em&gt;loosely allocated&lt;/em&gt; to committing to goals, they quickly got pushed off into &lt;em&gt;not
important enough land&lt;/em&gt;. It wasn&amp;rsquo;t until later in the year after I read many
resources about goal setting that I found the root cause of my failures. This
post will document my analysis on why many goals were not achieved and what I
will try this year to be &lt;em&gt;(more*)&lt;/em&gt; successful.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;*Remember, goals are just that.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&#34;failure-1-high-expectations&#34;&gt;Failure #1: High Expectations&lt;/h3&gt;

&lt;p&gt;I had set some pretty high expectations that required almost no flexibility in
other commitments. One of my high expectations was too many goals for the year. I tend to be
more optimistic in planning goals, and well, with most things. The thing here is to be optimistic, but get a nice slap of realism in the face when deciding which goals you should be able to achieve. And on that subject&amp;hellip;&lt;/p&gt;

&lt;h3 id=&#34;failure-2-not-defining-well-enough-what-success-is&#34;&gt;Failure #2: Not Defining (well enough) What Success Is&lt;/h3&gt;

&lt;p&gt;There were many goals that were in the following format:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Learn Modes for Guitar&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;That is a good place to start, but it isn&amp;rsquo;t really a goal. A goal is something
that you can define success on. Here I could have been more precise by using
this format:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Learn the Ionian, Dorian, and Lydian Modes by applying them to a backing track by 11/02/2016.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Success here is easily measured. If it is not done by that date, I&amp;rsquo;ve failed.&lt;/p&gt;

&lt;p&gt;Even better would be taking that goal and breaking it down to miniature goals so
progress can be measured over time.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Learn the Ionian Mode by apply it to a backing track by &lt;em&gt;x&lt;/em&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;And so on for each of the modes in the parent goal.&lt;/p&gt;

&lt;h3 id=&#34;failure-3-not-taking-advantage-of-habit&#34;&gt;Failure #3: Not Taking Advantage Of Habit&lt;/h3&gt;

&lt;p&gt;Habit is a powerful thing. It can be used for good and bad. The key here is to
use your natural tendency to succumb to habit and use it to get what you want in
the end. In &lt;a href=&#34;https://www.amazon.com/War-Art-Through-Creative-Battles/dp/1936891026&#34;&gt; &lt;em&gt;The War Of Art&lt;/em&gt;&lt;/a&gt;, Steven Pressfield describes his routine for
getting through procrastination and producing through habit. I have felt the
power of habit directly with my fitness routine that I&amp;rsquo;ve been following for 18
weeks and counting.&lt;/p&gt;

&lt;h3 id=&#34;failure-4-not-addressing-procrastination&#34;&gt;Failure #4: Not Addressing Procrastination&lt;/h3&gt;

&lt;p&gt;There are many techniques for battling procrastination. The Pomodoro Technique,
which I started taking a pretty serious look at in 2016, is a pretty popular
one. This one speaks to me because it essentially makes you realize what you can
actually get done in 25 minutes with complete focus. I didn&amp;rsquo;t start realizing the
power of allocating that little portion of time to larger goals daily until very
late in the year (like at the very end of the year). This was a huge mistake.&lt;/p&gt;

&lt;h3 id=&#34;failure-5-consuming-and-not-producing&#34;&gt;Failure #5: Consuming And Not Producing&lt;/h3&gt;

&lt;p&gt;I found myself consuming what other people produced too much. I mean, I don&amp;rsquo;t
really watch TV, but I did find myself reading Facebook posts and Reddit when I
was bored. That time could have been spent in better ways. What if I had spent
that time thinking about how to organize a new blog post or presentation for a
meetup? The possibilities are endless.&lt;/p&gt;

&lt;h3 id=&#34;failure-6-allowing-shallow-over-deep&#34;&gt;Failure #6: Allowing Shallow Over Deep&lt;/h3&gt;

&lt;p&gt;I let myself take on tasks at work that may have been more visible for
customers, but in the grand scheme, they didn&amp;rsquo;t help my programming ability or
my architectural chops. I am, after all, considered a &lt;em&gt;Senior Programmer&lt;/em&gt;, and
should be contributing to larger portions of the codebase and collaborating on
the architecture of the system primarily.&lt;/p&gt;

&lt;h3 id=&#34;failure-7-not-reviewing-until-it-didn-t-matter&#34;&gt;Failure #7: Not Reviewing (Until It Didn&amp;rsquo;t Matter)&lt;/h3&gt;

&lt;p&gt;I think the only time that I&amp;rsquo;d actually reviewed my goals for 2016 was in
November, which was too late to really complete most of them. So I never knew
where I stood in any of my goals, I only knew that there was something I wanted to
do and it wasn&amp;rsquo;t getting done. And as the days passed, the build-up of
frustration grew. If I had reviewed regularly, I would have known well in
advance whether something was going to happen or not and adjust goals
accordingly.&lt;/p&gt;

&lt;h3 id=&#34;conclusion&#34;&gt;Conclusion&lt;/h3&gt;

&lt;p&gt;This year, I wanted to blog 52 times, I only got 13 in. I wanted to learn 2
programming languages, I only learned 1. I wanted to learn more about music
theory, I only learned a few things that were not even on the radar. I wanted to
learn more about finance, I failed horribly. That&amp;rsquo;s right, I failed.&lt;/p&gt;

&lt;p&gt;On the bright side, I did:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Read the amount of books I wanted to read&lt;/li&gt;
&lt;li&gt;Gained a healthy fitness habit&lt;/li&gt;
&lt;li&gt;Learned more about food and adjusted my diet (Nutrition First)&lt;/li&gt;
&lt;li&gt;Have a better idea what it takes to write a book&lt;/li&gt;
&lt;li&gt;Understand how habit and procrastination rule the human mind&lt;/li&gt;
&lt;li&gt;Learned a little about Mindfulness and how it can help shape my life&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I&amp;rsquo;ve learned a lot in 2016. 2017 is only going to be better because of the
failures I&amp;rsquo;ve made in 2016. I hope your 2017 is filled with successes and failures
to learn from.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Easing Into Hugo Automation with Emacs: Part 1</title>
      <link>http://wmanger.com/post/2016-03-22/</link>
      <pubDate>Tue, 22 Mar 2016 21:53:53 -0600</pubDate>
      
      <guid>http://wmanger.com/post/2016-03-22/</guid>
      <description>&lt;p&gt;After reading a post on  &lt;a href=&#34;http://endlessparentheses.com/how-i-blog-one-year-of-posts-in-a-single-org-file.html&#34;&gt;Endless Parentheses&lt;/a&gt; about the author&amp;rsquo;s blogging workflow I instantly felt compelled to do something similar. Being an Emacs user, the thought of living inside of Emacs for as long as possible is always attractive. Of course, I &lt;em&gt;could&lt;/em&gt; have simply used his configuration as he&amp;rsquo;s pointed to some of his configuration on GitHub&amp;rsquo;s, but his flow involves Jekyll, and I am using Hugo. Moreover, coming up with my own flow and possibly porting a package would be a good way for an elisp beginner to gain some knowledge.&lt;/p&gt;

&lt;p&gt;So, here&amp;rsquo;s my first step at making Hugo play well with Emacs.&lt;/p&gt;

&lt;p&gt;First, I wanted to be able to &lt;em&gt;capture&lt;/em&gt; a post quickly. By using Org-Mode&amp;rsquo;s capture templates, this was pretty easy.&lt;/p&gt;

&lt;p&gt;(Somewhere in my &lt;em&gt;init.el&lt;/em&gt;)&lt;/p&gt;



(setq org-capture-templates
      &#39;(&#34;p&#34; &#34;Post&#34; plain (file (wm/hugo-new))
        (file &#34;~/path-to-template-file&#34;)))



&lt;p&gt;The &lt;code&gt;wm/hugo-new&lt;/code&gt; function here just creates a file name with today&amp;rsquo;s date. This is what that function looks like:&lt;/p&gt;



(defun today-is ()
  (format-time-string &#34;%Y-%m-%d&#34;))

(defun wm/hugo-new ()
  (concat (file-name-as-directory &#34;~/path-to-hugo-posts&#34;)
            (today-is) &#34;.md&#34;))



&lt;p&gt;And the template that I am using is just the basic hugo template, with a custom function for formatting the date the way that Hugo likes it.&lt;/p&gt;

&lt;div class=&#34;highlight&#34; style=&#34;background: #111111&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;+++
Categories = []
Description = &amp;quot;&amp;quot;
Tags = []
date = &amp;quot;%(wm/insert-date-time)&amp;quot;
menu = &amp;quot;main&amp;quot;
title = &amp;quot;&amp;quot;
+++

%?
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The &lt;code&gt;wm/insert-date-time&lt;/code&gt; function:&lt;/p&gt;



(defun wm/insert-date-time ()
  &#34;Insert current date-time string in full ISO 8601 format.
Example: 2010-11-29T23:23:35-08:00&#34;
   (concat
    (format-time-string &#34;%Y-%m-%dT%T&#34;)
    ((lambda (x) (concat (substring x 0 3) &#34;:&#34; (substring x 3 5)))
     (format-time-string &#34;%z&#34;))))



&lt;p&gt;At this point, I can hit &lt;code&gt;C-c c p&lt;/code&gt; and the screen splits vertically with a new markdown file created with the template ready to go. I just need to fill out the title, categories, and main content and hit &lt;code&gt;C-c C-c&lt;/code&gt; to save the post and get back to any work that I was doing before I started the post.&lt;/p&gt;

&lt;p&gt;Now that I have the file saved, I would like to be able to call the Hugo CLI to serve up the post I just created as well as build the posts to get them ready for publishing/pushing.&lt;/p&gt;

&lt;p&gt;The base solution is eshell aliases.&lt;/p&gt;

&lt;p&gt;In my &lt;code&gt;eshell/alias&lt;/code&gt; file, I have 3 entries that help with Hugo.&lt;/p&gt;



alias blog-serve hugo -s=&#34;~/path-to-blog-src&#34; server
alias blog-browse (browse-url &#34;http://localhost:1313&#34;)
alias blog-publish hugo -s=&#34;~/path-to-blog-src&#34;



&lt;p&gt;&lt;code&gt;blog-serve&lt;/code&gt; starts the server and makes the site available for browsing via the &lt;code&gt;blog-browse&lt;/code&gt; alias. &lt;code&gt;blog-publish&lt;/code&gt; is self-explanatory.&lt;/p&gt;

&lt;p&gt;The capture, along with the functions and these aliases make it pretty easy for me to just whip up a post at the speed of thought, but there is still a little too much manual work here. The next part of this series I will experiment with porting one of the Jekyll packages for use with Hugo. It would be really cool to have an all in one solution for Hugo like there is for Jekyll.&lt;/p&gt;

&lt;p&gt;Until next time&amp;hellip;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Beginning Again, statically</title>
      <link>http://wmanger.com/post/first/</link>
      <pubDate>Sat, 16 Jan 2016 14:57:47 -0700</pubDate>
      
      <guid>http://wmanger.com/post/first/</guid>
      <description>

&lt;p&gt;I&amp;rsquo;ve decided to start writing blog posts again since I am learning new things and I&amp;rsquo;d like to document the things I am learning in an attempt to measure progress. With this, a few things have changed. My original blog engine was blogger (very neglected), but I have recently started using &lt;a href=&#34;http://emacsformacosx.com/&#34;&gt;Emacs&lt;/a&gt; and, really, I don&amp;rsquo;t want to leave Emacs. I know there are modes for posting to blogger, but since I am starting to hack Golang, I think using a &lt;a href=&#34;https://gohugo.io/&#34;&gt;static blogging engine written in Go&lt;/a&gt; is appropriate. I don&amp;rsquo;t know of any special functions or modes to make using Hugo easier for the Emacs user, so there is room for me to learn how to make these functions/modes myself. Benefits galore.&lt;/p&gt;

&lt;h3 id=&#34;why&#34;&gt;Why?&lt;/h3&gt;

&lt;p&gt;It&amp;rsquo;s a long story, but I am trying out Sacha C&amp;rsquo;s method of learning things. Along with her &lt;a href=&#34;http://pages.sachachua.com/sharing/blog.html#value-blogging&#34;&gt;articles on blogging for learning&lt;/a&gt;, I&amp;rsquo;ve read others who use the same technique for an efficient learning environment. I have many things that I am learning all at once and I need a way to organize and solidify my learning.&lt;/p&gt;

&lt;h3 id=&#34;what-i-ll-post&#34;&gt;What I&amp;rsquo;ll Post&lt;/h3&gt;

&lt;p&gt;For now, the posts on this blog will mostly relate to programming &amp;ndash; ranging from slightly technical to overly technical. Overly technical posts will have little commentary and mostly code.&lt;/p&gt;

&lt;h3 id=&#34;when-i-ll-post&#34;&gt;When I&amp;rsquo;ll Post&lt;/h3&gt;

&lt;p&gt;I have no intended schedule and I cannot promise that posts will happen on a regular basis. I will try one post a week. That seems reasonable.&lt;/p&gt;

&lt;h3 id=&#34;goodbye-for-now&#34;&gt;Goodbye for now&lt;/h3&gt;

&lt;p&gt;Goodbye, until the next post.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>