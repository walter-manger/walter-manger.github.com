<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Programming C on To The Triforce</title>
    <link>http://wmanger.com/tags/programming-c/</link>
    <description>Recent content in Programming C on To The Triforce</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 03 Mar 2016 05:57:47 -0700</lastBuildDate>
    <atom:link href="http://wmanger.com/tags/programming-c/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Well, that was fast Mr. Deitel(s)</title>
      <link>http://wmanger.com/post/C_Quickly/</link>
      <pubDate>Thu, 03 Mar 2016 05:57:47 -0700</pubDate>
      
      <guid>http://wmanger.com/post/C_Quickly/</guid>
      <description>&lt;p&gt;I skimmed through most of the first 4 chapters of &lt;em&gt;C How To Program&lt;/em&gt; and then chapter 5 presents functions. I thought that I would continue skimming through, but then I got to the section on &lt;em&gt;Recursion&lt;/em&gt; and the classic introduction to it through implementing the factorial function.&lt;/p&gt;

&lt;div class=&#34;highlight&#34; style=&#34;background: #111111&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #ff0007; font-weight: bold; font-style: italic; background-color: #0f140f&#34;&gt;#include &amp;lt;stdio.h&amp;gt;&lt;/span&gt;

&lt;span style=&#34;color: #cdcaa9; font-weight: bold&#34;&gt;long&lt;/span&gt; &lt;span style=&#34;color: #ff0086; font-weight: bold&#34;&gt;factorial&lt;/span&gt;&lt;span style=&#34;color: #ffffff&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #cdcaa9; font-weight: bold&#34;&gt;long&lt;/span&gt;&lt;span style=&#34;color: #ffffff&#34;&gt;);&lt;/span&gt;

&lt;span style=&#34;color: #ffffff&#34;&gt;main()&lt;/span&gt;
&lt;span style=&#34;color: #ffffff&#34;&gt;{&lt;/span&gt;
  &lt;span style=&#34;color: #cdcaa9; font-weight: bold&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color: #ffffff&#34;&gt;i;&lt;/span&gt;
  &lt;span style=&#34;color: #fb660a; font-weight: bold&#34;&gt;for&lt;/span&gt;&lt;span style=&#34;color: #ffffff&#34;&gt;(i&lt;/span&gt; &lt;span style=&#34;color: #ffffff&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #0086f7; font-weight: bold&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #ffffff&#34;&gt;;&lt;/span&gt; &lt;span style=&#34;color: #ffffff&#34;&gt;i&lt;/span&gt; &lt;span style=&#34;color: #ffffff&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color: #0086f7; font-weight: bold&#34;&gt;10&lt;/span&gt;&lt;span style=&#34;color: #ffffff&#34;&gt;;&lt;/span&gt; &lt;span style=&#34;color: #ffffff&#34;&gt;i++)&lt;/span&gt;
    &lt;span style=&#34;color: #ffffff&#34;&gt;printf(&lt;/span&gt;&lt;span style=&#34;color: #0086d2&#34;&gt;&amp;quot;%2d! = %1d\n&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #ffffff&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #ffffff&#34;&gt;i,&lt;/span&gt; &lt;span style=&#34;color: #ffffff&#34;&gt;factorial(i));&lt;/span&gt;

  &lt;span style=&#34;color: #fb660a; font-weight: bold&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color: #0086f7; font-weight: bold&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #ffffff&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;color: #ffffff&#34;&gt;}&lt;/span&gt;


&lt;span style=&#34;color: #cdcaa9; font-weight: bold&#34;&gt;long&lt;/span&gt; &lt;span style=&#34;color: #ffffff&#34;&gt;factorial(&lt;/span&gt;&lt;span style=&#34;color: #cdcaa9; font-weight: bold&#34;&gt;long&lt;/span&gt; &lt;span style=&#34;color: #ffffff&#34;&gt;number)&lt;/span&gt; &lt;span style=&#34;color: #ffffff&#34;&gt;{&lt;/span&gt;
  &lt;span style=&#34;color: #fb660a; font-weight: bold&#34;&gt;if&lt;/span&gt;&lt;span style=&#34;color: #ffffff&#34;&gt;(number&lt;/span&gt; &lt;span style=&#34;color: #ffffff&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span style=&#34;color: #0086f7; font-weight: bold&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #ffffff&#34;&gt;)&lt;/span&gt;
    &lt;span style=&#34;color: #fb660a; font-weight: bold&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color: #0086f7; font-weight: bold&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #ffffff&#34;&gt;;&lt;/span&gt;
  &lt;span style=&#34;color: #fb660a; font-weight: bold&#34;&gt;else&lt;/span&gt;
    &lt;span style=&#34;color: #ff0086; font-weight: bold&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color: #ffffff&#34;&gt;(number&lt;/span&gt; &lt;span style=&#34;color: #ffffff&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color: #ffffff&#34;&gt;factorial(number&lt;/span&gt; &lt;span style=&#34;color: #ffffff&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color: #0086f7; font-weight: bold&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #ffffff&#34;&gt;));&lt;/span&gt;
&lt;span style=&#34;color: #ffffff&#34;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;I have to admit that I feel like I understand Recursion enough to be dangerous. In college, Recursion was hammered into my head pretty quickly and I was able to reason about it with some mathematical techniques, but I can&amp;rsquo;t say that I had full command of the subject. I am glad that the book has promised to discuss recursion in depth for the next few chapters. I am looking forward to attepting some of the exercises in this chapter.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Learning C/C&#43;&#43; Again</title>
      <link>http://wmanger.com/post/learning-C-again/</link>
      <pubDate>Tue, 01 Mar 2016 04:57:47 -0700</pubDate>
      
      <guid>http://wmanger.com/post/learning-C-again/</guid>
      <description>

&lt;p&gt;I&amp;rsquo;ve been wanting to get back into C/C++ for a while now, but I was unsure how I would go about creating a learning environment. There are many tutorials available out there, but I tend to lean toward structured learning &amp;ndash; like the way you would learn in a classroom setting. I quickly searched on Reddit and some other outlets about the best books to buy, but after reviewing a few, I was left empty handed. As you can probably imagine, the book that gets recommended the most is K&amp;amp;R&amp;rsquo;s &lt;em&gt;The C Programming Language&lt;/em&gt;. I think that it is a great recommendation, but I read that book cover to cover a few years ago. I was looking for something different as most tech books of this nature get boring quickly and most definitely if you are re-reading it.&lt;/p&gt;

&lt;h3 id=&#34;goodwill-ftw:881acfa8d42cd3861f49dfee4e7fd53d&#34;&gt;Goodwill FTW&lt;/h3&gt;

&lt;p&gt;The other day I went to a near by &lt;em&gt;Goodwill&lt;/em&gt; just to see what kind of books would be available and sure enough, gathered among diet books and romantic novels was: &lt;a href=&#34;http://www.amazon.com/C-How-Program-2nd-Edition/dp/0132261197&#34;&gt;&lt;em&gt;C How To Program 2nd Edition&lt;/em&gt;&lt;/a&gt; by &lt;em&gt;Dietel &amp;amp; Dietel&lt;/em&gt;. This book is likely out of date with best practices for modern C, but what I was looking for was a thorough &lt;em&gt;introduction&lt;/em&gt; to C/C++. This looks like it is what I was looking for. It has pretty good reviews on &lt;em&gt;Amazon&lt;/em&gt; too. I plan on picking up some books on modern best practices after this introduction.&lt;/p&gt;

&lt;h3 id=&#34;schedule:881acfa8d42cd3861f49dfee4e7fd53d&#34;&gt;Schedule&lt;/h3&gt;

&lt;p&gt;I don&amp;rsquo;t intend on spending too much time hammering through the entire book. Just a refresher for the first few chapters by skimming through and writing some of the more difficult programs for each chapter. Pointers are presented in Chapter 7, so that&amp;rsquo;s where I&amp;rsquo;ll likely slow down. I know pointers, but my working knowledge of them is lacking. My previous exposure to pointers and working experience in &lt;em&gt;Golang&lt;/em&gt; is useful in some ways, but &lt;em&gt;C/C++&lt;/em&gt; pointers are pretty different.&lt;/p&gt;

&lt;h3 id=&#34;expectations:881acfa8d42cd3861f49dfee4e7fd53d&#34;&gt;Expectations&lt;/h3&gt;

&lt;p&gt;What I hope to do is get good enough with &lt;em&gt;C/C++&lt;/em&gt; so that it is easier to read source for things like the &lt;em&gt;Linux&lt;/em&gt; kernel and general &lt;em&gt;GNU&lt;/em&gt; utilities. Eventually, I&amp;rsquo;d like to contribute to these types of things. Hopefully this first step is a step in the right direction.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>